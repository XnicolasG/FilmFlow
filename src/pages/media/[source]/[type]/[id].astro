---
import Layout from "../../../../layouts/Layout.astro";
import MainInfo from "../../../../components/media/MainInfo.astro";
import { apiClient } from "../../../../lib/apiClient";
import { staticMediaItems } from "../../../../lib/staticMedia";
import { getCredits } from "../../../../lib/api/credits/getCredits";
import Cast from "../../../../sections/singlePages/Cast.astro";

export const getStaticPaths = async () => {
    const items = await staticMediaItems();
    return items.map((item) => ({
        params: {
            source: item.source,
            type: item.media_type,
            id: String(item.id),
        },
    }));
};

import type { CrewMember } from "@/types";

const { source, type, id } = Astro.params;
const { cast, crew } = await getCredits(type, id);

const topRoles = [
    "Director",
    "Writer",
    "Screenplay",
    "Original Music Composer",
    "Producer",
];

const MainCrew = crew.filter((member: CrewMember) =>
    topRoles.includes(member.job),
);

console.log(MainCrew, MainCrew.length);

const res = await apiClient.get(`/${type}/${id}`, {
    params: { language: "en-US" },
});

const media = res.data;

const pageTitle = media.title || media.name;
---

<Layout title={pageTitle} description={media.overview}>
    <main class="w-svw h-svh pt-14">
        <section
            class="min-h-[60%]"
            style={`background-image: url('https://image.tmdb.org/t/p/w1280${media.backdrop_path}'); 
            position: relative; width: 100%; background-size: cover; background-position: center;`}
        >
            <div class="grid grid-cols-[1fr_2fr] w-full h-full bg-black/60">
                <MainInfo media={media} type={type} id={id} />
            </div>
        </section>
        <figure
            class="shadow shadow-amber-100 absolute flex bottom-36 left-14 w-60 h-80 rounded overflow-hidden"
        >
            <img
                class="w-full h-full"
                src={`https://image.tmdb.org/t/p/w1280${media?.poster_path}`}
                alt={media?.title}
            />
        </figure>
        <section
            class="w-full grid grid-cols-[2fr_1fr] gap-x-6 border-t-4 mb-6 border-orange-100 p-4"
        >
            <Cast cast={cast} />
            <h4 class="text-2xl font-semibold text-slate-50">Crew:</h4>
            <section class="col-start-2 grid grid-cols-[repeat(auto-fit,minmax(9rem,1fr))] gap-6 p-4">
                {
                    MainCrew.map((person: CrewMember) => {
                        const imageUrl = person.profile_path
                            ? `https://image.tmdb.org/t/p/w300${person.profile_path}`
                            : "https://www.pngitem.com/pimgs/m/22-223978_transparent-no-avatar-png-pyrenees-png-download.png";

                        return (
                            <article
                                key={`${person.id}`}
                                class="flex flex-col items-center text-center gap-2"
                                aria-label={`Perfil de ${person.name}`}
                            >
                                <figure class="w-20 h-20 rounded-full overflow-hidden border border-slate-600 shadow-md">
                                    <img
                                        src={imageUrl}
                                        alt={`Foto de ${person.name}`}
                                        class="w-full h-full object-cover"
                                    />
                                </figure>
                                <section class="text-sm">
                                    <h3 class="font-semibold text-slate-50">
                                        {person.name}
                                    </h3>
                                    <p class="text-sky-300/80">{person.job}</p>
                                    <footer class="text-slate-400 text-xs">
                                        {person.department}
                                    </footer>
                                </section>
                            </article>
                        );
                    })
                }
            </section>
        </section>
    </main>
</Layout>

<!-- trailer (modal animado), al lado de frase, crew principal al lado de rating, 
 segunda columna de grid bajo, información como duración, presupuesto,website, paises de producción -->
