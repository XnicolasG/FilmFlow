---
import Layout from "../../../../layouts/Layout.astro";
import MainInfo from "../../../../components/media/MainInfo.astro";
import { apiClient } from "../../../../lib/apiClient";
import { staticMediaItems } from "../../../../lib/staticMedia";
import { getCredits } from "../../../../lib/api/credits/getCredits";

export const getStaticPaths = async () => {
    const items = await staticMediaItems();
    return items.map((item) => ({
        params: {
            source: item.source,
            type: item.media_type,
            id: String(item.id),
        },
    }));
};

type Cast = {
    adult: boolean;
    gender: number;
    id: number;
    known_for_department: string;
    name: string;
    original_name: string;
    popularity: number;
    profile_path: string;
    cast_id: number;
    character: string;
    credit_id: string;
    order: number;
};

const { source, type, id } = Astro.params;
const { cast, crew } = await getCredits(type, id);
console.log(crew.slice(0,5));

const res = await apiClient.get(`/${type}/${id}`, {
    params: { language: "en-US" },
});

const media = res.data;
console.log(media);

const pageTitle = media.title || media.name;
---

<Layout title={pageTitle} description={media.overview}>
    <main class="w-svw h-svh pt-14">
        <section
            class=""
            style={`background-image: url('https://image.tmdb.org/t/p/w1280${media.backdrop_path}'); 
            position: relative; height: 60vh; width: 100%; background-size: cover; background-position: center;`}
        >
            <div class="grid grid-cols-[1fr_2fr] w-full h-full bg-black/60">
                <MainInfo media={media} type={type} id={id}  />
            </div>
        </section>
        <figure
            class="shadow shadow-amber-100 absolute flex bottom-36 left-14 w-60 h-80 rounded overflow-hidden"
        >
            <img
                class="w-full h-full"
                src={`https://image.tmdb.org/t/p/w1280${media?.poster_path}`}
                alt={media?.title}
            />
        </figure>
        <section
            class="w-full grid grid-cols-[2fr_1fr] border-t-4 mb-6 border-orange-100 p-4"
        >
        <h4 class="text-2xl font-semibold mt-20 mb-4 text-slate-50">Cast:</h4>
            <div class="col-start-1 flex gap-x-4 overflow-x-scroll scrollbar-styled">
                {
                    cast.slice(0, 10).map((person: Cast) => (
                        <article class="group h-fit ">
                            <figure class="w-44 h-56 overflow-hidden rounded-lg rounded-b-none">
                                <img
                                    class="w-full h-full object-cover group-hover:scale-110 transition-all duration-200"
                                    src={`https://image.tmdb.org/t/p/w1280${person.profile_path}`}
                                    alt={person.name}
                                />
                            </figure>
                            <section class="w-44 px-2 rounded-lg rounded-t-none group-hover:bg-amber-50 transition-colors duration-200 ">
                                <p class="font-semibold text-slate-50 group-hover:text-black/90">{person.name}</p>
                                <p class="italic text-sky-300/80 group-hover:text-sky-600">{person.character}</p>
                            </section>
                        </article>
                    ))
                }
            </div>
        </section>
    </main>
</Layout>

<!-- trailer (modal animado), al lado de frase, crew principal al lado de rating, 
 segunda columna de grid bajo, información como duración, presupuesto,website, paises de producción -->